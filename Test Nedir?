Test, bir ürünün belirlenen gereksinimleri karşılayıp karşılamadığının ve ürünün doğru çalışıp çalışmadığının kontrolü olarak tanımlanabilir. 

Test denildiğinde akla doğrulama ve onaylama kavramları gelmelidir. Doğrulama; üretilen ürünün doğru çalışıp çalışmadığının kontrolüdür. Onaylama ise; üretilen ürünün doğru ürün olup olmadığının kontrolüdür. Bir ürün mükemmel bir şekilde çalıştığı halde, müşterinin istediği ürün değilse, müşterinin ihtiyacını karşılamaz. Aynı durum müşterinin istediği şekilde üretilen ama doğru çalışmayan ürün için de geçerlidir. Bu nedenle doğrulama ve onaylama kavramları birbirinden farklı ama birbirinden ayrılamayan kavramlardır.

## **Yazılım Testinin Amaçları Nelerdir? Neden Gereklidir?**

· Gereksinimlerin ne kadar karşılandığından emin olmak,

· Ürünün kalite düzeyine karşı güven oluşturmak,

· Ürünün test işleminin tamamlandığını ve müşterinin beklediği şekilde çalıştığını onaylamak,

· Hataları ve kusurları bulmak ve önlemek,

· Yetersiz yazılım ve kalite riskini azaltmak,

· Geliştirme işleminin erken aşamalarında yanlışları saptayarak ileri aşamalara yayılmasını önlemek, böylece zaman ve maliyetten tasarruf sağlamak

## **Yazılım Testinin 7 Prensibi**

**1- Test Hataların Varlığını Göstermektir.**Hata bulunamaması yazılımın hatasız olduğu anlamına gelmez. Test senaryoları daha fazla hata bulmak için tasarlanmalıdır.

**2- Yüzde Yüz Test İmkansızdır.**Genellikle sektörde büyük isimlerin bile yanıldığı konulardan biridir. Ancak bir ürünün yüzde yüz test edilmesi imkansızdır. Ürün içerisinde bulunan sadece bir input’u bile test etmeye kalksak günlerimizi hatta aylarımızı alabilir. Bu yüzden test yaparken risklerimize ve önceliklerimize göre test yapmak önemli olacaktır.

**3-Teste Yazılım Sürecinin Başında Başlamak Gerekir.**Yukarıda da söz ettiğim gibi test sürecine yazılım sürecinin başında başlamak zaman ve maliyet açısından önemli olacaktır. Ürünün kalitesine doğrudan olmasa da katkı sağlayacaktır.

**4-Hatalar Yazılımın Belli Alanlarında Yoğunlaşır.**Yazılımda hatalar genellikle ürünü oluşturan bileşenlerin küçük bir kısmında bulunacağı görülecektir. Bu durum genellikle **Pareto** analizi ile açıklanır. Kalitenin iyileştirilmesinde sorunların büyük bir çoğunluğunu (% 80) nedenlerin sadece az bir kısmı tarafından üretilmektedir (% 20).

**5-Antibiyotik Direnci**Yazılımda sürecinde sürekli aynı senaryoları uygulamak bir süre sonra bağışıklık kazandıracaktır ve hataların bulunamamasına sebep olacaktır. Bu yüzden farklı farklı senaryolar denemek daha fazla hata bulma açısından önemlidir.

**6-Testin Kapsamı Bağımsızdır.**Bir ürüne test uygularken farklı bir ürüne uyguladığınız testlerden farklı olmalıdır. Çünkü ürünler birbirinden bağımsızdır. Hastanede kullanılan bir yazılımın kapsamı ile e-ticaret sitelerindeki yazılımın kapsamı farklıdır bu yüzden testleri ürünün kapsamını dikkate alarak yapmak gerekir.

**7- Test Ürünün Hatasız Olduğunu Kanıtlayamaz.**Test yaparken bir başka düştüğümüz yanılgı da o ürünün hatasız çalıştığına inanmaktır. Ancak test yazılımın hatasız çalıştığını kanıtlamaz, o üründeki hataları minimum seviyeye çekerek kalitesini artırmasına yardımcı olur.
